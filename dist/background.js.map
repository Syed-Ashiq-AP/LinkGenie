{"version":3,"file":"background.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://extentions/./src/background/background.js"],"sourcesContent":["const SAFETY_THRESHOLDS = {\n    connectionsPerDay: 100,\n    messagesPerHour: 30\n  };\n  \n  // Keep service worker alive\n  console.log(\"Background script loaded\");\n  \n  setInterval(() => console.log(\"Keeping service worker alive...\"), 25000);\n  \n  // Listen for messages from other parts of the extension\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.type === \"CHECK_SAFETY\") {\n      chrome.storage.local.get(['usage'], (result) => {\n        const safetyScore = calculateSafetyScore(result.usage || {});\n        sendResponse({ score: safetyScore });\n      });\n      return true; // Indicates we will send a response asynchronously\n    }\n  });\n  \n  // Calculate a safety score based on user activity\n  function calculateSafetyScore(usage) {\n    let score = 100;\n    if ((usage.connections || 0) > 80) score -= 30;\n    if ((usage.messages || 0) > 25) score -= 20;\n    return Math.max(score, 30);\n  }\n  \n  // Test script execution on LinkedIn when the extension icon is clicked\n  chrome.action.onClicked.addListener((tab) => {\n    chrome.scripting.executeScript({\n      target: { tabId: tab.id },\n      func: () => alert(\"Hello from LinkGenie! Your LinkedIn automation is active.\"),\n    });\n  });\n  "],"names":[],"sourceRoot":""}